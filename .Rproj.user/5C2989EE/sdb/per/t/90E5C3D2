{
    "contents" : "\n\n\n# Counter\n# A server parameters\nSP <- list()\n# Record the number of poeple who have used the app\n#    since initiation on the server\nSP$npers <- 0\n\nshinyServer(function(input, output) {\n\n  # Counter\n    # shinyServer is Started up every time the domain is called.\n    # Use <<- to assign to the global server environment.\n    SP$npers <<- SP$npers + 1\n    output$hits <- renderText({\n      paste0(\"Pageviews: \" , SP$npers)\n    })\n    \n  \n  \noutput$plot <- renderPlot({\n  times1 <- 0\n  # Vector of true weights\n  true.weight <- 70\n\n  # Number of times measured\n  times <- input$times.measured\n\n  # systematic.error (size)\n  systematic.error <- input$size_systematic_error\n\n  # Size of random error\n  random.error <- input$size_random_error\n\n  # Times = 0, Systematic error = 0, Random error = 0\n  if(times == 0){\n    plot(NA, xlim=c(0,140), ylim=c(0,10), xlab=\"\", ylab=\"\", yaxt=\"n\", cex.axis=2)\n    axis(1, at=seq(0,140,10), labels=seq(0,140,10), cex.axis=2)\n    mtext(\"Weight\", side=1, line=3, col=\"black\", cex=2)\n    # Plot line\n    lines(c(true.weight,true.weight), c(0,5), col=\"blue\", lwd=2, lty=2)\n    text(true.weight, 6.7, \"Tom's true weight\", col=\"blue\", cex=2)\n    text(0, 9.5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    # text(0, 8.5, paste(\"Systematic Error = \", \"0\", sep=\"\"), cex=2, pos = 4)\n  }\n\n  # Times > 0, Systematic error = 0, Random error = 0\n  if(times > 0 && systematic.error == 0 && random.error == 0){\n    plot(NA, xlim=c(0,140), ylim=c(0,10), xlab=\"\", ylab=\"\", yaxt=\"n\", cex.axis=2)\n    axis(1, at=seq(0,140,10), labels=seq(0,140,10), cex.axis=2)\n    mtext(\"Weight\", side=1, line=3, col=\"black\", cex=2)\n    # Plot line\n    lines(c(true.weight,true.weight), c(0,5), col=\"blue\", lwd=2, lty=2)\n    text(true.weight, 6.7, \"Tom's true weight\", col=\"blue\", cex=2)\n    x.values <- rep(true.weight, times)\n    y.values <- rnorm(times, mean = 2.5, sd = 0.7)\n    points(x.values, y.values, pch=4)\n    text(0, 9.5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    # text(0, 8.5, paste(\"Systematic Error =\", systematic.error, sep=\"\"), cex=2, pos = 4)\n  }\n\n\n  # delta[Tom]\n\n  # Times > 0, Systematic error = 0, Random error > 0\n  if(times > 0 && systematic.error == 0 && random.error > 0){\n    plot(NA, xlim=c(0,140), ylim=c(0,10), xlab=\"\", ylab=\"\", yaxt=\"n\", cex.axis=2)\n    axis(1, at=seq(0,140,10), labels=seq(0,140,10), cex.axis=2)\n    mtext(\"Weight\", side=1, line=3, col=\"black\", cex=2)\n    # Plot line\n    lines(c(true.weight,true.weight), c(0,5), col=\"blue\", lwd=2, lty=2)\n    text(true.weight, 6.7, \"Tom's true weight\", col=\"blue\", cex=2)\n    x.values <- rnorm(times, mean = 70, sd = random.error)\n    y.values <- rnorm(times, mean = 2.5, sd = 0.7)\n    points(x.values, y.values, pch=4)\n    text(0, 9.5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    # text(0, 8.5, paste(\"Systematic Error =\", systematic.error, sep=\"\"), cex=2, pos = 4)\n  }\n\n  # Times > 0, Systematic error > 0, Random error = 0\n  if(times > 0 && systematic.error > 0 && random.error == 0){\n    plot(NA, xlim=c(0,140), ylim=c(0,10), xlab=\"\", ylab=\"\", yaxt=\"n\", cex.axis=2)\n    axis(1, at=seq(0,140,10), labels=seq(0,140,10), cex.axis=2)\n    mtext(\"Weight\", side=1, line=3, col=\"black\", cex=2)\n    # True weight line\n    lines(c(true.weight,true.weight), c(0,5), col=\"blue\", lwd=2, lty=2)\n    text(true.weight, 6.7, \"Tom's true weight\", col=\"blue\", cex=2)\n    # Measurements\n    x.values <- rnorm(times, mean = true.weight+systematic.error, sd = random.error)\n    y.values <- rnorm(times, mean = 2.5, sd = 0.7)\n    points(x.values, y.values, pch=4)\n    # Line for mean of measured weights\n    mean.measured.weights <- mean(x.values)\n    lines(c(mean.measured.weights,mean.measured.weights), c(0,5), col=\"black\", lwd=2, lty=2)\n    #\n    # Add arrow for error\n    arrows(true.weight, 4.5, mean.measured.weights, 4.5, length = 0.25, angle = 30, col=\"red\")\n    middle <- true.weight+(systematic.error/2)\n    text(middle, 5.5, expression(delta), col=\"red\", cex=2)\n    text(0, 9.5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    # text(0, 8.5, paste(\"Systematic Error =\", systematic.error, sep=\"\"), cex=2, pos = 4)\n  }\n\n  # Times > 0, Systematic error > 0, Random error > 0\n  if(times > 0 && systematic.error > 0 && random.error > 0){\n    plot(NA, xlim=c(0,140), ylim=c(0,10), xlab=\"\", ylab=\"\", yaxt=\"n\", cex.axis=2)\n    axis(1, at=seq(0,140,10), labels=seq(0,140,10), cex.axis=2)\n    mtext(\"Weight\", side=1, line=3, col=\"black\", cex=2)\n    # True weight line\n    lines(c(true.weight,true.weight), c(0,5), col=\"blue\", lwd=2, lty=2)\n    text(true.weight, 6.7, \"Tom's true weight\", col=\"blue\", cex=2)\n    # Measurements\n    x.values <- rnorm(times, mean = true.weight+systematic.error, sd = random.error)\n    y.values <- rnorm(times, mean = 2.5, sd = 0.7)\n    points(x.values, y.values, pch=4)\n    # Line for mean of measured weights\n    mean.measured.weights <- mean(x.values)\n    lines(c(mean.measured.weights,mean.measured.weights), c(0,5), col=\"black\", lwd=2, lty=2)\n    #\n    # Add arrow for error\n    arrows(true.weight, 4.5, mean.measured.weights, 4.5, length = 0.25, angle = 30, col=\"red\")\n    middle <- true.weight+(systematic.error/2)\n    text(middle, 5.5, expression(delta), col=\"red\", cex=2)\n    text(0, 9.5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    # text(0, 8.5, paste(\"Systematic Error =\", systematic.error, sep=\"\"), cex=2, pos = 4)\n  }\n\n  # Times > 0, Systematic error < 0, Random error = 0\n  if(times > 0 && systematic.error < 0 && random.error == 0){\n    plot(NA, xlim=c(0,140), ylim=c(0,10), xlab=\"\", ylab=\"\", yaxt=\"n\", cex.axis=2)\n    axis(1, at=seq(0,140,10), labels=seq(0,140,10), cex.axis=2)\n    mtext(\"Weight\", side=1, line=3, col=\"black\", cex=2)\n    # True weight line\n    lines(c(true.weight,true.weight), c(0,5), col=\"blue\", lwd=2, lty=2)\n    text(true.weight, 6.7, \"Tom's true weight\", col=\"blue\", cex=2)\n    # Measurements\n    x.values <- rnorm(times, mean = true.weight+systematic.error, sd = random.error)\n    y.values <- rnorm(times, mean = 2.5, sd = 0.7)\n    points(x.values, y.values, pch=4)\n    # Line for mean of measured weights\n    mean.measured.weights <- mean(x.values)\n    lines(c(mean.measured.weights,mean.measured.weights), c(0,5), col=\"black\", lwd=2, lty=2)\n    #\n    # Add arrow for error\n    arrows(true.weight, 4.5, mean.measured.weights, 4.5, length = 0.25, angle = 30, col=\"red\")\n    middle <- true.weight+(systematic.error/2)\n    text(middle, 5.5, expression(delta), col=\"red\", cex=2)\n    text(0, 9.5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    # text(0, 8.5, paste(\"Systematic Error =\", systematic.error, sep=\"\"), cex=2, pos = 4)\n  }\n\n  # Times > 0, Systematic error < 0, Random error > 0\n  if(times > 0 && systematic.error < 0 && random.error > 0){\n    plot(NA, xlim=c(0,140), ylim=c(0,10), xlab=\"\", ylab=\"\", yaxt=\"n\", cex.axis=2)\n    axis(1, at=seq(0,140,10), labels=seq(0,140,10), cex.axis=2)\n    mtext(\"Weight\", side=1, line=3, col=\"black\", cex=2)\n    # True weight line\n    lines(c(true.weight,true.weight), c(0,5), col=\"blue\", lwd=2, lty=2)\n    text(true.weight, 6.7, \"Tom's true weight\", col=\"blue\", cex=2)\n    # Measurements\n    x.values <- rnorm(times, mean = true.weight+systematic.error, sd = random.error)\n    y.values <- rnorm(times, mean = 2.5, sd = 0.7)\n    points(x.values, y.values, pch=4)\n    # Line for mean of measured weights\n    mean.measured.weights <- mean(x.values)\n    lines(c(mean.measured.weights,mean.measured.weights), c(0,5), col=\"black\", lwd=2, lty=2)\n    #\n    # Add arrow for error\n    arrows(true.weight, 4.5, mean.measured.weights, 4.5, length = 0.25, angle = 30, col=\"red\")\n    middle <- true.weight+(systematic.error/2)\n    text(middle, 5.5, expression(delta), col=\"red\", cex=2)\n    text(0, 9.5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    # text(0, 8.5, paste(\"Systematic Error =\", systematic.error, sep=\"\"), cex=2, pos = 4)\n  }\n        }, height=400)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\noutput$plot2 <- renderPlot({\n  times1 <- 0\n  # Vector of true weights\n  true.weight <- 70\n  \n  # Number of times measured\n  times <- input$times.measured\n  \n  # systematic.error (size)\n  systematic.error <- input$size_systematic_error\n  \n  # Size of random error\n  random.error <- input$size_random_error\n  \n  # Times = 0, Systematic error = 0, Random error = 0\n  if(times == 0){\n    radial.plot(rep(0,4),rep(0,4), main=\"\", labels=\"\\n\",  \n                line.col=\"black\", lwd=1, lty=3,rad.col=\"black\", rp.type=\"p\", \n                radial.lim=c(0,4), label.prop=1.1, cex.axis=.5,\n                show.grid.labels=3, \n                radial.labels=NA,\n                show.centroid=F,\n                show.radial.grid=FALSE\n                )  \n    text(2.3,0, \"Tom's true weight\", font=1)\n    points(0,0, col=\"red\", pch=19)\n  }\n  \n  \n  \n  \n  \n  # Times > 0, Systematic error = 0, Random error = 0\n  if(times > 0 && systematic.error == 0 && random.error == 0){\n    radial.plot(rep(0,4),rep(0,4), main=\"\", labels=\"\\n\",  \n                line.col=\"black\", lwd=1, lty=3,rad.col=\"black\", rp.type=\"p\", \n                radial.lim=c(0,4), label.prop=1.1, cex.axis=.5,\n                show.grid.labels=3, \n                radial.labels=NA,\n                show.centroid=F,\n                show.radial.grid=FALSE\n    )  \n    text(2.3,0, \"Tom's true weight\", font=1)\n    points(0,0, col=\"red\", pch=19)\n    text(-7, 5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    # \n    for(i in 0:times){\n    rep(radialtext(\"x\", center=c(0,0), start=NA, middle=0, end=NA, angle=0,\n               deg=NA, expand=0, stretch=0, nice=TRUE, cex=NA), times)\n    }\n  }\n  \n  \n  # delta[Tom]\n  \n  # Times > 0, Systematic error = 0, Random error > 0\n  if(times > 0 && systematic.error == 0 && random.error > 0){\n    \n    radial.plot(rep(0,4),rep(0,4), main=\"\", labels=\"\\n\",  \n                line.col=\"black\", lwd=1, lty=3,rad.col=\"black\", rp.type=\"p\", \n                radial.lim=c(0,4), label.prop=1.1, cex.axis=.5,\n                show.grid.labels=3, \n                radial.labels=NA,\n                show.centroid=F,\n                show.radial.grid=FALSE\n    )  \n    text(2.3,0, \"Tom's true weight\", font=1)\n    points(0,0, col=\"red\", pch=19)\n    text(-7, 5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    #   \n    x.values <- abs(rnorm(times, mean = 0, sd = random.error/10))\n    y.values <- runif(times, min = 0, max=360)\n    # polar.plot(x.values,y.values,main=\"Test Polar Plot\",rp.type=\"s\",point.symbols=4, add=TRUE)\n    # \n    for(i in 1:times){\n      rep(radialtext(\".\", center=c(0,0), start=NA, middle=x.values[i], end=NA, angle=NA,\n                     deg=y.values[i], expand=0, stretch=0, nice=F, cex=NA))\n    }\n    \n    \n  }\n  \n  # Times > 0, Systematic error > 0, Random error = 0\n  if(times > 0 && systematic.error > 0 && random.error == 0){\n  \n    \n    radial.plot(rep(0,4),rep(0,4), main=\"\", labels=\"\\n\",  \n                line.col=\"black\", lwd=1, lty=3,rad.col=\"black\", rp.type=\"p\", \n                radial.lim=c(0,4), label.prop=1.1, cex.axis=.5,\n                show.grid.labels=3, \n                radial.labels=NA,\n                show.centroid=F,\n                show.radial.grid=FALSE\n    )  \n    text(2.3,0, \"Tom's true weight\", font=1)\n    points(0,0, col=\"red\", pch=19)\n    text(-7, 5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    #   \n    x.values <- abs(rnorm(times, mean = 0, sd = random.error/10))\n    y.values <- runif(times, min = 0, max=360)\n    # polar.plot(x.values,y.values,main=\"Test Polar Plot\",rp.type=\"s\",point.symbols=4, add=TRUE)\n    # \n    for(i in 1:times){\n      rep(radialtext(\".\", center=c(0,systematic.error/10), start=NA, middle=x.values[i], end=NA, angle=NA,\n                     deg=y.values[i], expand=0, stretch=0, nice=F, cex=NA))\n    }\n    \n  \n  \n\n  }\n  \n  # Times > 0, Systematic error > 0, Random error > 0\n  if(times > 0 && systematic.error > 0 && random.error > 0){\n\n    radial.plot(rep(0,4),rep(0,4), main=\"\", labels=\"\\n\",  \n                line.col=\"black\", lwd=1, lty=3,rad.col=\"black\", rp.type=\"p\", \n                radial.lim=c(0,4), label.prop=1.1, cex.axis=.5,\n                show.grid.labels=3, \n                radial.labels=NA,\n                show.centroid=F,\n                show.radial.grid=FALSE\n    )  \n    text(2.3,0, \"Tom's true weight\", font=1)\n    points(0,0, col=\"red\", pch=19)\n    text(-7, 5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    #   \n    x.values <- abs(rnorm(times, mean = 0, sd = random.error/10))\n    y.values <- runif(times, min = 0, max=360)\n    # polar.plot(x.values,y.values,main=\"Test Polar Plot\",rp.type=\"s\",point.symbols=4, add=TRUE)\n    # \n    for(i in 1:times){\n      rep(radialtext(\".\", center=c(0,systematic.error/10), start=NA, middle=x.values[i], end=NA, angle=NA,\n                     deg=y.values[i], expand=0, stretch=0, nice=F, cex=NA))\n    }\n    \n  }\n  \n  # Times > 0, Systematic error < 0, Random error = 0\n  if(times > 0 && systematic.error < 0 && random.error == 0){\n\n    radial.plot(rep(0,4),rep(0,4), main=\"\", labels=\"\\n\",  \n                line.col=\"black\", lwd=1, lty=3,rad.col=\"black\", rp.type=\"p\", \n                radial.lim=c(0,4), label.prop=1.1, cex.axis=.5,\n                show.grid.labels=3, \n                radial.labels=NA,\n                show.centroid=F,\n                show.radial.grid=FALSE\n    )  \n    text(2.3,0, \"Tom's true weight\", font=1)\n    points(0,0, col=\"red\", pch=19)\n    text(-7, 5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    #   \n    x.values <- abs(rnorm(times, mean = 0, sd = random.error/10))\n    y.values <- runif(times, min = 0, max=360)\n    # polar.plot(x.values,y.values,main=\"Test Polar Plot\",rp.type=\"s\",point.symbols=4, add=TRUE)\n    # \n    for(i in 1:times){\n      rep(radialtext(\".\", center=c(0,systematic.error/10), start=NA, middle=x.values[i], end=NA, angle=NA,\n                     deg=y.values[i], expand=0, stretch=0, nice=F, cex=NA))\n    }\n    \n    \n      }\n  \n  # Times > 0, Systematic error < 0, Random error > 0\n  if(times > 0 && systematic.error < 0 && random.error > 0){\n  \n    radial.plot(rep(0,4),rep(0,4), main=\"\", labels=\"\\n\",  \n                line.col=\"black\", lwd=1, lty=3,rad.col=\"black\", rp.type=\"p\", \n                radial.lim=c(0,4), label.prop=1.1, cex.axis=.5,\n                show.grid.labels=3, \n                radial.labels=NA,\n                show.centroid=F,\n                show.radial.grid=FALSE\n    )  \n    text(2.3,0, \"Tom's true weight\", font=1)\n    points(0,0, col=\"red\", pch=19)\n    text(-7, 5, paste(\"N = \", times, sep=\"\"), cex=2, pos = 4)\n    #   \n    x.values <- abs(rnorm(times, mean = 0, sd = random.error/10))\n    y.values <- runif(times, min = 0, max=360)\n    # polar.plot(x.values,y.values,main=\"Test Polar Plot\",rp.type=\"s\",point.symbols=4, add=TRUE)\n    # \n    for(i in 1:times){\n      rep(radialtext(\".\", center=c(0,systematic.error/10), start=NA, middle=x.values[i], end=NA, angle=NA,\n                     deg=y.values[i], expand=0, stretch=0, nice=F, cex=NA))\n    }\n    \n    \n  }\n}, height=400)\n\n\n})\n",
    "created" : 1446907393447.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3656797742",
    "id" : "90E5C3D2",
    "lastKnownWriteTime" : 1446859349,
    "path" : "C:/Users/paul/Google Drive/Packages/measurement_error/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}